package is001;
import java.util.*;

class TelephoneSimulator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        HashMap<String, String> missedCalls = new LinkedHashMap<>();

        while (true) {
            System.out.println("1. Add Missed Call");
            System.out.println("2. Display Missed Calls");
            System.out.println("3. Delete a Call");
            System.out.println("4. Display Numbers with Names Starting from 'A'");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");

            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character

            switch (choice) {
                case 1:
                    addMissedCall(scanner, missedCalls);
                    break;
                case 2:
                    displayMissedCalls(missedCalls);
                    break;
                case 3:  
                    deleteCall(scanner, missedCalls);
                    break;
                case 4:
                    displayNamesStartingWithA(missedCalls);
                    break;
                case 5:
                    System.out.println("Exiting the program. Goodbye!");
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please enter a valid option.");
            }
        }
    }

    private static void addMissedCall(Scanner scanner, HashMap<String, String> missedCalls) {
        System.out.print("Enter the telephone number: ");
        String phoneNumber = scanner.nextLine();
        System.out.print("Enter the caller's name (or leave blank for private caller): ");
        String callerName = scanner.nextLine();

        if (callerName.isEmpty()) {
            callerName = "Private Caller";
        }

        missedCalls.put(phoneNumber, callerName);
        System.out.println("Missed call added successfully.");
    }

    private static void displayMissedCalls(HashMap<String, String> missedCalls) {
        if (missedCalls.isEmpty()) {
            System.out.println("No missed calls.");
            return;
        }

        System.out.println("Missed Calls:");
        for (Map.Entry<String, String> entry : missedCalls.entrySet()) {
            System.out.println("Number: " + entry.getKey() + ", Name: " + entry.getValue());
        }
    }

    private static void deleteCall(Scanner scanner, HashMap<String, String> missedCalls) {
        System.out.print("Enter the telephone number to delete: ");
        String phoneNumberToDelete = scanner.nextLine();

        if (missedCalls.containsKey(phoneNumberToDelete)) {
            missedCalls.remove(phoneNumberToDelete);
            System.out.println("Call deleted successfully.");
        } else {
            System.out.println("Call not found in the missed call list.");
        }
    }

    
    private static void displayNamesStartingWithA(HashMap<String, String> missedCalls) {
        System.out.println("Phone numbers with names starting from 'A':");
        for (Map.Entry<String, String> entry : missedCalls.entrySet()) {
            if (entry.getValue().toUpperCase().startsWith("A")) {
                System.out.println("Number: " + entry.getKey() + ", Name: " + entry.getValue());
            }
        }
    }
}
		
	} 
}

